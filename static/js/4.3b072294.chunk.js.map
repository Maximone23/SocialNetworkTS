{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","style","dialog","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","dialogsPage","dispatch"],"mappings":"oMAKIA,EAA6B,SAACC,GAAD,MAA0B,CACvDC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAoB,IAC3CC,EAD0C,uKAGxC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHL,GAChBC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAoCL,K,oBCjB/CM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCepMC,MAVf,SAAoBN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,yBAAKC,UAAS,UAAKC,IAAMC,OAAX,YAAqBD,IAAME,SACrC,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,QCEvBC,MALf,SAAiBd,GACb,OAAO,yBAAKS,UAAWC,IAAMK,SAAUf,EAAMe,U,iCCE3CC,EAAcC,YAAiB,IAmBtBC,cAA8B,CAACC,KAAM,yBAArCD,EAjByD,SAAClB,GAErE,OACI,0BAAMoB,SAAUpB,EAAMqB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXX,KAAM,iBACNY,YAAa,qBACbC,SAAU,CAACC,IAAUX,MAEhC,6BACI,6CCoBDY,MA1Bf,SAAiB5B,GAGb,IAAI6B,EAAkB7B,EAAM8B,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAML,GAAIwB,EAAExB,GAAIyB,IAAKD,EAAExB,QACpF0B,EAAmBlC,EAAMmC,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASrB,QAASqB,EAAErB,QAASP,GAAI4B,EAAE5B,GAAIyB,IAAKG,EAAE5B,QAM7F,OACI,yBAAKC,UAAWC,IAAMoB,SAClB,yBAAKrB,UAAWC,IAAM2B,cACjBR,GAEL,yBAAKpB,UAAWC,IAAMyB,UAClB,6BAAMD,GACN,kBAAC,EAAD,CAAgBd,SAXR,SAACkB,GACjBtC,EAAMuC,YAAYD,EAAOE,sB,wBCSlBC,sBACXtC,aAfkB,SAACV,GACnB,MAAO,CACHqC,QAASrC,EAAMiD,YAAYZ,QAC3BK,SAAU1C,EAAMiD,YAAYP,aAGX,SAACQ,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASJ,YAAYC,SAO7B5C,IAFW6C,CAGbb","file":"static/js/4.3b072294.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2yNdZ\",\"dialogsItems\":\"Dialogs_dialogsItems__1qT3V\",\"active\":\"Dialogs_active__3pWuj\",\"dialog\":\"Dialogs_dialog__3DeIQ\",\"messages\":\"Dialogs_messages__1LISt\",\"message\":\"Dialogs_message__3yR9K\"};","import React from \"react\";\r\nimport style from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogType} from \"../../../redux/dialogs-reducer\";\r\n\r\n\r\nfunction DialogItem(props: DialogType) {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={`${style.dialog} ${style.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from \"./../Dialogs.module.css\";\r\nimport {MessageType} from \"../../../redux/dialogs-reducer\";\r\n\r\n\r\n\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={style.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nexport type AddMessageFormType = {\r\n    newMessageBody: any //?????????????????????????????????\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder={\"Enter Your Message\"}\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<AddMessageFormType>({form: 'dialogSendMessageForm'})(AddMessageForm)","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogs-reducer\";\r\nimport AddMessageForm, {AddMessageFormType} from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\ntype DialogsType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    updateMessageChange: (body: string) => void\r\n    sendMessage: (values: AddMessageFormType) => void\r\n}\r\n\r\n\r\n\r\nfunction Dialogs(props: DialogsType) {\r\n\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElements = props.messages.map(m => <Message message={m.message} id={m.id} key={m.id}/>);\r\n\r\n    let addNewMessage = (values: AddMessageFormType) => {\r\n        props.sendMessage(values.newMessageBody)//???????????????????\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Dialogs;","import {DialogType, MessageType, sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void;\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessage(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.FunctionComponent>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}