{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","memo","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","style","descrBlock","fullName","src","photos","large","alt","aboutMe","Preloader","Post","item","photo","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","MyPosts","postsElements","posts","map","p","id","key","postsBlock","values","addPost","newPostText","profilePage","dispatch","Profile","MyPostsContainer","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.33eba628.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descrBlock\":\"ProfileInfo_descrBlock__ZcaEX\",\"headerImg\":\"ProfileInfo_headerImg__3d-wI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__268xc\",\"posts\":\"MyPosts_posts__2dTAM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__28apu\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {ChangeEvent, useEffect, useState} from 'react'\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus = React.memo((props: ProfileStatusPropsType) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange}\r\n                               onBlur={deactivateEditMode}\r\n                               autoFocus\r\n                               value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n})\r\n\r\nexport default ProfileStatus","import React from \"react\"\r\nimport style from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\"\r\nimport ProfileStatus1 from \"./ProfileStatus\"\r\n\r\n\r\n\r\ntype ProfileInfoProps = {\r\n    profile: any\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nfunction ProfileInfo({profile, status, updateStatus}: ProfileInfoProps) {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={style.descrBlock}>\r\n                <div>{profile.fullName}</div>\r\n                <img src={profile.photos.large} alt={'ProfilePhoto'}/>\r\n                <div>{profile.aboutMe}</div>\r\n                <ProfileStatus1 status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport style from \"./Post.module.css\"\r\nimport photo from \"../../../../assets/image/user-photo.png\"\r\nimport {PostType} from \"../../../../redux/profile-reducer\";\r\n\r\n\r\n\r\n\r\nfunction Post(props: PostType) {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src={photo} alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport style from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {PostType} from \"../../../redux/profile-reducer\";\r\nimport {InjectedFormProps, Field, reduxForm } from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\ntype MyPostsType = {\r\n    posts: Array<PostType>\r\n    addPost: (values: string) => void\r\n}\r\n\r\ntype AddNewPostFormType = {\r\n    newPostText: any //?????????????????????????????????????\r\n}\r\n\r\nfunction MyPosts(props: MyPostsType) {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}\r\n    id={p.id} key={p.id}/>);\r\n\r\n    const onAddPost = (values: AddNewPostFormType) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n            <div className={style.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={style.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<AddNewPostFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newPostText\"} component={Textarea} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm<AddNewPostFormType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import {addPost, PostType} from \"../../../redux/profile-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPost(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: any\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nfunction Profile(props: ProfilePropsType) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\ntype PathParamType = {\r\n    userId: any\r\n}\r\ntype MapStatePropsType = {\r\n    profile: any\r\n    status: any\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps<PathParamType>\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Profile profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentClass>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}